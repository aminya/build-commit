#!/usr/bin/env node

const {program} = require('commander')
const colors = require('colors')
const shell = require('shelljs')
const path = require('path')
const child_process = require('child_process')

console.log('Running build-commit:'.cyan);

program.version('0.1.2')

program
    .option('-d, --directory <directory>',
        'Root of the git directory',
        '.')
    .option('-o, --output <directory>',
        'Build destination folder',
        'dist')
    .option('-m --message <message>',
        'If provided does not run post-command',
        'chore: add built files')
    .option('-pre, --precommand <command>',
        'Execute a shell command before committing.',
        'npm run build')
    .option('-post, --postcommand <command>',
        'Execute a shell command after committing.')
    .option('--nopre',
        'If provided does not run pre-command')
    .option('--nopost',
        'If provided does not run post-command')


program.parse(process.argv)


if (program.directory !== ".") {
    shell.cd(program.directory)
    console.log(`directory changed to ${program.directory}`.yellow)
}

if (!shell.test('-f', '.gitignore')) {
    shell.touch('.gitignore')
    console.log('.gitignore was created'.yellow)
}

const ignore_hasdir = shell.grep(program.output, '.gitignore')
if (!ignore_hasdir) {
    shell.echo(program.output).toEnd('.gitignore');
    console.log(`${program.output} was added to .gitignore`.yellow)
}

shell.mv('.gitignore', '.gitignore.back')
if (!program.nopre) {
    console.log('running precommand'.blue)
    child_process.execSync(program.precommand)
}
shell.exec(`git add -- ${program.output}`)
shell.exec(`git commit -m \"${program.message}\" -- ${program.output}`)
shell.mv('.gitignore.back', '.gitignore')
shell.cd(program.output)

if (process.platform == 'win32') {

    child_process.execSync(`git ls-files -z | ${path.join(__dirname, "xargs.cmd")} -0 git update-index --assume-unchanged`, {stdio: 'inherit'})
} else {
    shell.exec('git ls-files -z | xargs -0 git update-index --assume-unchanged')
}

shell.cd(program.directory)

if (!program.nopost && program.postcommand) {
    console.log('running postcommand'.blue)
    child_process.execSync(program.postcommand)
}

console.log("build-commit finished".blue)
